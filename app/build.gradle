/*
 *     Copyright 2017 Alex Almeida Tavella
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
  compileSdkVersion 25
  buildToolsVersion "25.0.2"
  defaultConfig {
    applicationId "br.com.alex.moov"
    minSdkVersion 16
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    externalNativeBuild {
      cmake {
        cppFlags "-std=c++11"
      }
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  externalNativeBuild {
    cmake {
      path "CMakeLists.txt"
    }
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
    androidTest.java.srcDirs += 'src/androidTest/kotlin'
  }

  dataBinding { enabled = true }

  lintOptions {
    lintConfig file('quality/lint.xml')
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])

  // Android
  def support_version = '25.1.0'
  compile "com.android.support:appcompat-v7:$support_version"
  compile "com.android.support:design:$support_version"
  compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'

  // Crashlytics
  compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
    transitive = true;
  }

  // Databinding
  kapt "com.android.databinding:compiler:$android_plugin_version"

  // Kotlin
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  kapt 'com.android.databinding:compiler:2.0.0-beta6'

  // Dependency Injection
  compile 'com.google.dagger:dagger:2.8'
  kapt 'com.google.dagger:dagger-compiler:2.8'

  // Retrofit
  compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
  compile 'com.squareup.retrofit2:retrofit:2.0.2'
  compile 'com.squareup.retrofit2:converter-gson:2.0.2'
  compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'

  // Rx
  compile 'io.reactivex:rxandroid:1.2.0'
  compile 'io.reactivex:rxjava:1.1.5'

  // Image
  compile 'com.facebook.fresco:fresco:1.0.1'

  // DbFlow
  def dbflow_version = "4.0.0-beta5"
  kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
  compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
  compile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"
  compile "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${dbflow_version}"

  // Memory Leak detection
  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
  testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

  // Logging
  compile 'com.jakewharton.timber:timber:4.5.0'

  testCompile 'junit:junit:4.12'

  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
}

crashlytics {
  enableNdk true
  androidNdkOut 'src/main/cpp'
  androidNdkLibsOut 'src/main/cpp'
}

gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xmaxerrs" << "500"
  }
}
